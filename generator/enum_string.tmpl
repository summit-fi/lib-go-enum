{{- define "enum_string"}}
const (
{{- $enumName := .enum.Name -}}
{{- $enumType := .enum.Type -}}
{{- $noComments := .nocomments -}}
{{- $vars := dict "lastoffset" "0" -}}
{{ range $rIndex, $value := .enum.Values }}
	{{- if $noComments }}{{else}}
	{{ if eq $value.Name "_"}}// Skipped value.{{else}}// {{$value.PrefixedName}} is a {{$enumName}} of type {{$value.RawName}}.{{end}}{{end}}
	{{- if $value.Comment}}
	// {{$value.Comment}}
	{{- end}}
    {{$value.PrefixedName}} {{$enumName}} = "{{$value.ValueStr}}"
{{- end}}
)

func (e {{.enum.Name}}) Valid() bool {
  switch e {
  case {{ range $idx, $value := .enum.Values }}{{ if ne $idx 0 }},{{ "\n" }}{{ end }}{{ .PrefixedName }}{{ end }}:
    return true
  }
  return false
}

func All{{ .enum.Name }}Values() []{{ .enum.Name }} {
	return []{{ .enum.Name }}{ {{ range .enum.Values}}{{ "\n" }}{{ .PrefixedName }},{{ end }}
	}
}

{{end}}
